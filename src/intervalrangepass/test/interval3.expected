*** interval range analysis for function define i64 @_tip_main() {
entry:
  %subtmp = sub i64 42, 40
  %gttmp = icmp sgt i64 %subtmp, 42
  %ifcond = icmp ne i1 %gttmp, false
  br i1 %ifcond, label %then1, label %else1

then1:                                            ; preds = %entry
  br label %ifmerge1

else1:                                            ; preds = %entry
  br label %ifmerge1

ifmerge1:                                         ; preds = %else1, %then1
  %y.0 = phi i64 [ %subtmp, %then1 ], [ 4, %else1 ]
  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ]
  call void @llvm.donothing()
  %addtmp = add i64 %z.0, 2
  %subtmp9 = sub i64 %addtmp, %y.0
  %addtmp12 = add i64 %z.0, %addtmp
  %addtmp14 = add i64 %addtmp12, %subtmp9
  ret i64 %addtmp14
}
 ***
  %addtmp14 = add i64 %addtmp12, %subtmp9 = [6,128]
  %gttmp = icmp sgt i64 %subtmp, 42 = [0,1]
  call void @llvm.donothing() = [-inf,+inf]
  %ifcond = icmp ne i1 %gttmp, false = [0,1]
  %addtmp12 = add i64 %z.0, %addtmp = [6,86]
  %subtmp9 = sub i64 %addtmp, %y.0 = [0,42]
  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ] = [2,42]
  %subtmp = sub i64 42, 40 = [2,2]
  %y.0 = phi i64 [ %subtmp, %then1 ], [ 4, %else1 ] = [2,4]
  %addtmp = add i64 %z.0, 2 = [4,44]
